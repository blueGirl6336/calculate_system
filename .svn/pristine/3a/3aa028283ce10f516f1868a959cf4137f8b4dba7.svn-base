package com.cesystem.web;

import java.sql.Date;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.cesystem.pojo.Prize;
import com.cesystem.pojo.PrizeApplication;
import com.cesystem.pojo.Student;
import com.cesystem.pojo.WinPrize;
import com.cesystem.service.StudentService;
import com.cesystem.service.WinPrizeService;
import com.cesystem.temp.WinPrizeTemp;
import com.cesystem.util.ResponseMapUtil;

@Controller
@RequestMapping(value = "WinScore")
public class WinPrizeController {

	@Autowired
	private WinPrizeService winPrizeService;
	@Autowired
	private StudentService studentService;
	@Autowired
	private HttpServletRequest request;
	
	@RequestMapping(value = "getPrize")
	@ResponseBody
	public List<WinPrizeTemp> getWinPrize()
	{
		WinPrizeTemp winPrizeTemp = new WinPrizeTemp();
		List<WinPrizeTemp> list = new ArrayList<WinPrizeTemp>();
		//��ȡsession�е�studentId����
		int studentId;
		HttpSession session = request.getSession();
		studentId = (Integer) session.getAttribute("studentId");
		
		list = winPrizeService.getWinPrize(studentId);
		
		return list;
	}
	
	// 手动录入奖项信息
	@RequestMapping(value = "/addWinPrize")
	@ResponseBody
	public Map<String, Object> addWinPrize(@RequestParam String userName, @RequestParam int prizeId, 
			                                  @RequestParam boolean isCurrent, @RequestParam Date time, 
			                                  @RequestParam int paId){
		
		WinPrize winPrize = new WinPrize();
		
		Student student = studentService.searchByUserName(userName);
		Prize prize = new Prize();
		prize.setPrizeId(prizeId);
		PrizeApplication prizeApplication = new PrizeApplication();
		prizeApplication.setPaId(paId);
		
		winPrize.setStudent(student);
		winPrize.setPrize(prize);
		winPrize.setIsCurrent(isCurrent);
		winPrize.setTime(time.toString());
		winPrize.setPrizeApplication(prizeApplication);
		
		winPrizeService.addWinPrize(winPrize);

		return ResponseMapUtil.responseSuccess(null);
		
	}
	
	// 通过Excel录入奖项信息
	@RequestMapping(value = "/addWinPrizeByExcel")
	@ResponseBody
	public Map<String, Object> addWinPrizeByExcel(@RequestParam List<WinPrize> winPrizeList){
		
		for(WinPrize w : winPrizeList) {
			winPrizeService.addWinPrize(w);
		}

		return ResponseMapUtil.responseSuccess(null);
		
	}
	
	// 修改奖项信息
	@RequestMapping(value = "/modifyWinPrize")
	@ResponseBody
	public Map<String, Object> modifyWinPrize(@RequestParam int studentId, @RequestParam int prizeId, 
			                                  @RequestParam boolean isCurrent, @RequestParam int wpId,
			                                  @RequestParam Date time,@RequestParam int paId){
		
		WinPrize winPrize = winPrizeService.searchWinPrizeById(wpId);
		
		Student student = new Student();
		student.setStudentId(studentId);
		Prize prize = new Prize();
		prize.setPrizeId(prizeId);
		PrizeApplication prizeApplication = new PrizeApplication();
		prizeApplication.setPaId(paId);
		
		winPrize.setStudent(student);
		winPrize.setPrize(prize);
		winPrize.setIsCurrent(isCurrent);
		winPrize.setTime(time.toString());
		winPrize.setPrizeApplication(prizeApplication);
		
		winPrizeService.modifyWinPrize(winPrize);

		return ResponseMapUtil.responseSuccess(null);
		
	}
	
	// 删除奖项信息
	@RequestMapping(value = "/deleteWinPrize")
	@ResponseBody
	public Map<String, Object> deleteWinPrize(@RequestParam int wpId){
		
		WinPrize winPrize = winPrizeService.searchWinPrizeById(wpId);
		
		winPrizeService.deleteWinPrize(winPrize);

		return ResponseMapUtil.responseSuccess(null);
		
	}
	

	// 根据部门查询奖项信息
	@RequestMapping(value = "/searchWinPrize")
	@ResponseBody
	public Map<String, Object> searchWinPrize(@RequestParam String apartmentId){

		List<WinPrize> winPrizeList = winPrizeService.searchWinPrizeByApartmentId(apartmentId);

        return ResponseMapUtil.responseSuccess(winPrizeList);

    }
}
