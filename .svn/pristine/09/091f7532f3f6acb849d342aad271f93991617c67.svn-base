package com.cesystem.web;

import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.apache.commons.io.FileUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.cesystem.pojo.Prize;
import com.cesystem.pojo.PrizeApplication;
import com.cesystem.pojo.Student;
import com.cesystem.pojo.WinPrize;
import com.cesystem.service.StudentService;
import com.cesystem.service.WinPrizeService;
import com.cesystem.temp.WinPrizeTemp;
import com.cesystem.util.ResponseMapUtil;

@Controller
@RequestMapping(value = "/winPrize")
public class WinPrizeController {

	@Autowired
	private WinPrizeService winPrizeService;
	@Autowired
	private StudentService studentService;
	@Autowired
	private HttpServletRequest request;

	@RequestMapping(value = "getPrize")
	@ResponseBody
	public List<WinPrizeTemp> getWinPrize() {
		WinPrizeTemp winPrizeTemp = new WinPrizeTemp();
		List<WinPrizeTemp> list = new ArrayList<WinPrizeTemp>();
		// ��ȡsession�е�studentId����
		int studentId;
		HttpSession session = request.getSession();
		studentId = (Integer) session.getAttribute("studentId");

		list = winPrizeService.getWinPrize(studentId);

		return list;
	}

	// 手动录入奖项信息
	@RequestMapping(value = "/addWinPrize")
	@ResponseBody
	public Map<String, Object> addWinPrize(@RequestParam String userName,
			@RequestParam int prizeId, @RequestParam boolean isCurrent) {

		WinPrize winPrize = new WinPrize();

		Student student = studentService.searchByUserName(userName);
		Prize prize = new Prize();
		prize.setPrizeId(prizeId);

		winPrize.setStudent(student);
		winPrize.setPrize(prize);
		winPrize.setIsCurrent(isCurrent);

		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		java.util.Date date = new java.util.Date();
		String time = sdf.format(date);
		winPrize.setTime(time);

		winPrizeService.addWinPrize(winPrize);

		return ResponseMapUtil.responseSuccess(null);

	}

	// 通过Excel录入奖项信息
	@RequestMapping(value = "/addWinPrizeByExcel")
	@ResponseBody
	public Map<String, Object> addWinPrizeByExcel(
			@RequestParam("attachs") MultipartFile[] attachs,
			HttpServletRequest httpServletRequest) throws IOException {

		String realPath = httpServletRequest.getSession().getServletContext()
				.getRealPath("/resources/upload");
		System.out.println(realPath);
		for (MultipartFile attach : attachs) {
			if (attach.isEmpty())
				continue;
			File file = new File(realPath + "/" + attach.getOriginalFilename());
			FileUtils.copyInputStreamToFile(attach.getInputStream(), file);
		}

		this.winPrizeService.addWinPrizeByExcel(realPath + "/"
				+ attachs[0].getOriginalFilename());

		return ResponseMapUtil.responseSuccess(null);

	}

	// 修改奖项信息
	@RequestMapping(value = "/modifyWinPrize")
	@ResponseBody
	public Map<String, Object> modifyWinPrize(@RequestParam String userName,
			@RequestParam int prizeId, @RequestParam boolean isCurrent,
			@RequestParam int wpId, int paId) {

		WinPrize winPrize = winPrizeService.searchWinPrizeById(wpId);

		Student student = studentService.searchByUserName(userName);
		Prize prize = new Prize();
		prize.setPrizeId(prizeId);
		PrizeApplication prizeApplication = new PrizeApplication();
		prizeApplication.setPaId(paId);

		winPrize.setStudent(student);
		winPrize.setPrize(prize);
		winPrize.setIsCurrent(isCurrent);
		winPrize.setPrizeApplication(prizeApplication);

		winPrizeService.modifyWinPrize(winPrize);

		return ResponseMapUtil.responseSuccess(null);

	}

	// 删除奖项信息
	@RequestMapping(value = "/deleteWinPrize")
	@ResponseBody
	public Map<String, Object> deleteWinPrize(@RequestParam int id) {

		WinPrize winPrize = winPrizeService.searchWinPrizeById(id);

		winPrizeService.deleteWinPrize(winPrize);

		return ResponseMapUtil.responseSuccess(null);

	}

	// 根据部门查询奖项信息
	@RequestMapping(value = "/searchWinPrize")
	@ResponseBody
	public Map<String, Object> searchWinPrize() {

		HttpSession session = request.getSession();
		int studentId = (Integer) session.getAttribute("studentId");

		Student student = studentService.getStudentById(studentId);
		List<WinPrize> winPrizeList = winPrizeService
				.searchWinPrizeByApartmentId(student.getApartment()
						.getApartmentId());

		return ResponseMapUtil.responseSuccess(winPrizeList);

	}
}
